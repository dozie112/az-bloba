name: Terraform CI/CD (Azure)

on:
  pull_request:
    branches: [ main ]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform.yml"
  push:
    branches: [ main ]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform.yml"

permissions:
  id-token: write   # required for OIDC login to Azure (recommended)
  contents: read

env:
  TF_CLI_ARGS_init: "-input=false"
  TF_CLI_ARGS_apply: "-auto-approve -input=false"
  TF_CLI_ARGS_plan: "-input=false -no-color"
  WORK_DIR: terraform

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Login to Azure using OIDC (recommended â€“ no long-lived secrets)
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: ${{ env.WORK_DIR }}
        run: terraform init

      - name: Terraform Format Check
        working-directory: ${{ env.WORK_DIR }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.WORK_DIR }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.WORK_DIR }}
        run: terraform plan -out=tfplan

      - name: Show Plan (for logs)
        working-directory: ${{ env.WORK_DIR }}
        run: terraform show tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan

  apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production    # Use GitHub Environment 'production' for approval gate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: ${{ env.WORK_DIR }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ env.WORK_DIR }}
        run: terraform apply
